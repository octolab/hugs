version: "3"

services:

  database:
    image: postgres:10-alpine # https://hub.docker.com/_/postgres/
    env_file:
    - etc/env/postgres.env
    volumes:
    - ./etc/postgres/initdb.d:/docker-entrypoint-initdb.d
    - pgdata:/var/lib/postgresql/data

  click-migration:
    image: kamilsk/click:latest # https://hub.docker.com/r/kamilsk/click/
    command: [ "migrate", "up" ]
    depends_on:
    - database
    env_file:
    - etc/env/click.env
  click:
    image: kamilsk/click:latest
    command: [ "run", "--with-profiler", "--with-monitoring" ]
    depends_on:
    - click-migration
    env_file:
    - etc/env/click.env

  forma-migration:
    image: kamilsk/form-api:latest # https://hub.docker.com/r/kamilsk/form-api/
    command: [ "migrate", "up" ]
    depends_on:
    - database
    env_file:
    - etc/env/forma.env
  forma:
    image: kamilsk/form-api:latest
    command: [ "run", "--with-profiler", "--with-monitoring" ]
    depends_on:
    - forma-migration
    env_file:
    - etc/env/forma.env

  hugo:
    image: kamilsk/hugo:latest # https://hub.docker.com/r/kamilsk/hugo/
    env_file:
    - etc/env/hugo.env
    volumes:
    - ./site:/usr/share/site

  passport-migration:
    image: kamilsk/passport:latest # https://hub.docker.com/r/kamilsk/passport/
    command: [ "migrate", "up" ]
    depends_on:
    - database
    env_file:
    - etc/env/passport.env
    volumes:
    - deprecated:/usr/share/passport
  passport:
    image: kamilsk/passport:latest
    command: [ "run", "--with-profiler", "--with-monitoring" ]
    depends_on:
    - passport-migration
    env_file:
    - etc/env/passport.env
    volumes:
    - deprecated:/usr/share/passport

  server:
    image: kamilsk/nginx:alpine # https://hub.docker.com/r/kamilsk/nginx/
    command: [ "hugs.octolab.net" ]
    depends_on:
    - click
    - forma
    - hugo
    - passport
    entrypoint: |
      /bin/bash -c "echo $$BASIC_USER:`(echo $$BASIC_PASS | openssl passwd -crypt -stdin -noverify)` >> /etc/nginx/.htpasswd \
                    && ./entrypoint.sh"
    env_file:
    - etc/env/balancer.env
    ports:
    - ${HUGS_HTTP_PORT}:80
    - ${HUGS_HTTPS_PORT}:443
    volumes:
    - ./etc/nginx/ssl:/etc/nginx/ssl:ro
    - ./etc/nginx/conf.d:/etc/nginx/sites-available:ro
    - letsencrypt:/etc/letsencrypt

volumes:

  pgdata:      { driver: local }

  letsencrypt: { driver: local }

  deprecated:  { driver: local }
